{"ast":null,"code":"import _classCallCheck from \"D:/CUPZ/Belajar ReactJS/SmartMonitoring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:/CUPZ/Belajar ReactJS/SmartMonitoring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"D:/CUPZ/Belajar ReactJS/SmartMonitoring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"D:/CUPZ/Belajar ReactJS/SmartMonitoring/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"D:\\\\CUPZ\\\\Belajar ReactJS\\\\SmartMonitoring\\\\src\\\\components\\\\Temperature.js\";\nimport ReactApexChart from \"react-apexcharts\";\nimport React, { Component } from \"react\";\nimport { MDBEdgeHeader, MDBFreeBird, MDBContainer, MDBCol, MDBRow, MDBCardBody, MDBIcon, MDBCard, MDBCardTitle, MDBCardImage, MDBCardText, MDBAnimation, MDBNavLink } from \"mdbreact\"; // Data generation\n\n/*function getRandomNumber() {\r\n    // Create random array of objects\r\n    return Math.round(20 + 80 * Math.random())\r\n    \r\n}*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar Temperature = /*#__PURE__*/function (_Component) {\n  _inherits(Temperature, _Component);\n\n  var _super = _createSuper(Temperature);\n\n  function Temperature(props) {\n    var _this;\n\n    _classCallCheck(this, Temperature);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      series: [0],\n      options: {\n        chart: {\n          height: 350,\n          type: \"radialBar\"\n        },\n        plotOptions: {\n          radialBar: {\n            hollow: {\n              size: \"50%\"\n            },\n            dataLabels: {\n              show: true,\n              name: {\n                show: true,\n                fontSize: \"16px\",\n                fontFamily: undefined,\n                fontWeight: 600,\n                color: undefined,\n                offsetY: -10\n              },\n              value: {\n                show: true,\n                fontSize: \"14px\",\n                fontFamily: undefined,\n                fontWeight: 400,\n                color: undefined,\n                offsetY: 16,\n                formatter: function formatter(val) {\n                  return val + \"â„ƒ\";\n                }\n              }\n            }\n          }\n        },\n        labels: [\"Temperature\"]\n      }\n    };\n    return _this;\n  }\n\n  _createClass(Temperature, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      //Set update interval\n      window.setInterval(function () {\n        fetch(\"http://www.smartmonitoring.somee.com/api/Data/GetLastData\").then(function (res) {\n          return res.json();\n        }).then(function (resJson) {\n          _this2.setState({\n            series: [parseInt(Math.round(resJson[0].temperature, 0))]\n          });\n        }).catch(function (e) {\n          console.log(\"Error : \" + e);\n        });\n        /*fetch('http://www.smartmonitoring.somee.com/api/Data/GetLastData', { \r\n            method: 'get', \r\n            headers: new Headers({\r\n              // Your header content\r\n            })\r\n          }).then((res) => res.json())\r\n          .then((resJson) => {\r\n            console.log(\"resJson : \", resJson);\r\n            console.log(\"resJson : \", resJson.temperature);\r\n            this.setState({ series: resJson.temperature });\r\n          })\r\n          .catch((e) => {\r\n            console.log(\"Error : \", e);\r\n          });*/\n\n        /*fetch(\"http://www.smartmonitoring.somee.com/api/Data/GetLastData\")\r\n            .then((res) => res.json())\r\n            .then((resJson) => {\r\n              console.log(\"resJson : \", resJson);\r\n              this.setState({ series: resJson.temperature });\r\n            })\r\n            .catch((e) => {\r\n              console.log(\"Error : \", e);\r\n            });*/\n\n        /*this.setState({\r\n            series: [getRandomNumber()]\r\n          })*/\n      }, 3000);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"app\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"chart\",\n              children: /*#__PURE__*/_jsxDEV(ReactApexChart, {\n                options: this.state.options,\n                series: this.state.series,\n                type: \"radialBar\",\n                height: 350\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 9\n        }, this)\n      }, void 0, false);\n    }\n  }]);\n\n  return Temperature;\n}(Component);\n\nexport default Temperature;","map":{"version":3,"sources":["D:/CUPZ/Belajar ReactJS/SmartMonitoring/src/components/Temperature.js"],"names":["ReactApexChart","React","Component","MDBEdgeHeader","MDBFreeBird","MDBContainer","MDBCol","MDBRow","MDBCardBody","MDBIcon","MDBCard","MDBCardTitle","MDBCardImage","MDBCardText","MDBAnimation","MDBNavLink","Temperature","props","state","series","options","chart","height","type","plotOptions","radialBar","hollow","size","dataLabels","show","name","fontSize","fontFamily","undefined","fontWeight","color","offsetY","value","formatter","val","labels","window","setInterval","fetch","then","res","json","resJson","setState","parseInt","Math","round","temperature","catch","e","console","log"],"mappings":"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","sourcesContent":["import ReactApexChart from \"react-apexcharts\";\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  MDBEdgeHeader,\r\n  MDBFreeBird,\r\n  MDBContainer,\r\n  MDBCol,\r\n  MDBRow,\r\n  MDBCardBody,\r\n  MDBIcon,\r\n  MDBCard,\r\n  MDBCardTitle,\r\n  MDBCardImage,\r\n  MDBCardText,\r\n  MDBAnimation,\r\n  MDBNavLink,\r\n} from \"mdbreact\";\r\n\r\n// Data generation\r\n/*function getRandomNumber() {\r\n    // Create random array of objects\r\n    return Math.round(20 + 80 * Math.random())\r\n    \r\n}*/\r\n\r\nclass Temperature extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      series: [0],\r\n      options: {\r\n        chart: {\r\n          height: 350,\r\n          type: \"radialBar\",\r\n        },\r\n        plotOptions: {\r\n          radialBar: {\r\n            hollow: {\r\n              size: \"50%\",\r\n            },\r\n            dataLabels: {\r\n              show: true,\r\n              name: {\r\n                show: true,\r\n                fontSize: \"16px\",\r\n                fontFamily: undefined,\r\n                fontWeight: 600,\r\n                color: undefined,\r\n                offsetY: -10,\r\n              },\r\n              value: {\r\n                show: true,\r\n                fontSize: \"14px\",\r\n                fontFamily: undefined,\r\n                fontWeight: 400,\r\n                color: undefined,\r\n                offsetY: 16,\r\n                formatter: function (val) {\r\n                  return val + \"â„ƒ\";\r\n                },\r\n              },\r\n            },\r\n          },\r\n        },\r\n        labels: [\"Temperature\"],\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    //Set update interval\r\n    window.setInterval(() => {\r\n      fetch(\"http://www.smartmonitoring.somee.com/api/Data/GetLastData\")\r\n        .then((res) => res.json())\r\n        .then((resJson) => {\r\n          this.setState({\r\n            series: [parseInt(Math.round(resJson[0].temperature, 0))],\r\n          });\r\n        })\r\n        .catch((e) => {\r\n          console.log(\"Error : \" + e);\r\n        });\r\n\r\n      /*fetch('http://www.smartmonitoring.somee.com/api/Data/GetLastData', { \r\n          method: 'get', \r\n          headers: new Headers({\r\n            // Your header content\r\n          })\r\n        }).then((res) => res.json())\r\n        .then((resJson) => {\r\n          console.log(\"resJson : \", resJson);\r\n          console.log(\"resJson : \", resJson.temperature);\r\n          this.setState({ series: resJson.temperature });\r\n        })\r\n        .catch((e) => {\r\n          console.log(\"Error : \", e);\r\n        });*/\r\n\r\n      /*fetch(\"http://www.smartmonitoring.somee.com/api/Data/GetLastData\")\r\n          .then((res) => res.json())\r\n          .then((resJson) => {\r\n            console.log(\"resJson : \", resJson);\r\n            this.setState({ series: resJson.temperature });\r\n          })\r\n          .catch((e) => {\r\n            console.log(\"Error : \", e);\r\n          });*/\r\n\r\n      /*this.setState({\r\n          series: [getRandomNumber()]\r\n        })*/\r\n    }, 3000);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"app\">\r\n          <div className=\"row\">\r\n            <div id=\"chart\">\r\n              <ReactApexChart\r\n                options={this.state.options}\r\n                series={this.state.series}\r\n                type=\"radialBar\"\r\n                height={350}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Temperature;\r\n"]},"metadata":{},"sourceType":"module"}